[tool.flake8]
line-length = 120

[tool.pycodestyle]
line-length = 120

[tool.flakehell]
max_line_length = 120
show_source = true

[tool.flakehell.plugins]
pycodestyle = ["+*"]
pyflakes = ["+*"]
flake8-commas = ["+*"]
flake8-quotes = ["+*"]

[tool.black]
line-length = 120
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 4
include_trailing_comma = true
force_grid_wrap = 0
ensure_newline_before_comments = true
use_parentheses = true
skip_gitignore = true
skip_glob = ["migrations/*"]
known_local_folder = ["app", "config"]

[tool.ruff]
# "ANN", "FBT", "EM", "G", "INP", "ERA", "PTH", "TRY", "RUF"
select = ["A", "B", "C", "D", "E", "F", "W", "I", "N", "C90", "UP", "YTT", "S", "BLE", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PL", "PLE", "PLR", "PLW"]
ignore = ["A003", "D100", "D101", "D102", "D103", "D105", "D203", "D213", "T201"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "W", "I", "N", "C90", "UP", "YTT", "S", "BLE", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PL", "PLE", "PLR", "PLW"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version = "py312"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.pyright]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  ".venv"
]
defineConstant = { DEBUG = true }
venvPath = ".venv/"

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.12"
pythonPlatform = "All"

[tool.djlint]
blank_line_after_tag="from,endmacro"
blank_line_before_tag="block,extends,include"
close_void_tags=true
exclude=".venv,venv"
extension="j2"
format_attribute_template_tags=true
ignore="H017,H031,T002"
indent=2
linter_output_format="{filename}:{line}: {code} {message} {match}"
max_attribute_length=240
max_blank_lines=3
max_line_length=240
profile="jinja-html"
use_gitignore=true
